version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: burrow-db
    restart: unless-stopped
    environment:
      POSTGRES_DB: burrow
      POSTGRES_USER: burrow_user
      POSTGRES_PASSWORD: ${DB_PASSWORD:-burrow_password}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    ports:
      - "5432:5432"
    networks:
      - burrow-network

  # Redis for caching and sessions
  redis:
    image: redis:7-alpine
    container_name: burrow-redis
    restart: unless-stopped
    volumes:
      - redis_data:/data
    networks:
      - burrow-network

  # Burrow App
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: burrow-app
    restart: unless-stopped
    environment:
      DATABASE_URL: postgresql://burrow_user:${DB_PASSWORD:-burrow_password}@postgres:5432/burrow
      REDIS_URL: redis://redis:6379
      NODE_ENV: production
      NEXTAUTH_SECRET: ${NEXTAUTH_SECRET:-your-secret-key}
      NEXTAUTH_URL: ${NEXTAUTH_URL:-http://localhost:3000}
    depends_on:
      - postgres
      - redis
    networks:
      - burrow-network
    volumes:
      - ./uploads:/app/uploads
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: burrow-nginx
    restart: unless-stopped
    ports:
      - "4344:80"
      - "4345:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - app
    networks:
      - burrow-network

  # Watchtower for automatic updates
  watchtower:
    image: containrrr/watchtower
    container_name: burrow-watchtower
    restart: unless-stopped
    environment:
      WATCHTOWER_CLEANUP: "true"
      WATCHTOWER_POLL_INTERVAL: 300
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - burrow-network

volumes:
  postgres_data:
  redis_data:

networks:
  burrow-network:
    driver: bridge 